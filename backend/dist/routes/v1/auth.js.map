{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../../routes/v1/auth.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AACjC,gGAAyD;AAGzD,MAAM,UAAU,GAAW,IAAA,gBAAM,GAAE,CAAC;AAEpC,kBAAe,CAAC,MAAW,EAAU,EAAE;IACrC,OAAO;QACL,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,CAAC;QACV,MAAM;YACJ,MAAM,UAAU,GAAG,IAAI,yBAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAClF,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YAC3F,OAAO,UAAU,CAAC;QACpB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Router } from 'express';\nimport AuthCtrl from '../../controllers/auth.controller';\nimport type { Iroute } from '../../types';\nimport type { App } from '../../app';\nconst AuthRouter: Router = Router();\n\nexport default (client: App): Iroute => {\n  return {\n    route: 'auth',\n    version: 1,\n    router() {\n      const controller = new AuthCtrl(client);\n      AuthRouter.post('/', (req, res) => controller.authentification(client, req, res));\n      AuthRouter.get('/disconnection', (req, res) => controller.disconnection(client, req, res));\n      return AuthRouter;\n    },\n  };\n};\n"]}