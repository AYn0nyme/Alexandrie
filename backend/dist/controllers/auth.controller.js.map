{"version":3,"file":"auth.controller.js","sourceRoot":"","sources":["../../controllers/auth.controller.ts"],"names":[],"mappings":";;;AAAA,qEAA4C;AAC5C,kDAAoD;AACpD,+CAAoC;AAIpC,MAAM,aAAa,GAAkB;IACnC,MAAM,EAAE,OAAO,GAAG,CAAC;IACnB,QAAQ,EAAE,IAAI;IACd,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;IAChC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;IAC3D,QAAQ,EAAE,KAAK;CAChB,CAAC;AAEF,MAAqB,gBAAgB;IAEnC,YAAY,GAAQ;QADpB;;;;;WAAoB;QAElB,IAAI,CAAC,KAAK,GAAG,IAAI,eAAY,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IACD,gBAAgB,CAAC,CAAM,EAAE,GAAY,EAAE,GAAa;QAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAClD,IAAI,CAAC,MAAM,CAAC,EAAE;YACb,MAAM,KAAK,GAAG,IAAA,mBAAI,EAAC,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;YACzF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,GAAG,KAAK,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,uDAAuD;YAC5G,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,uDAAuD;YAC7G,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,GAAG,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,uDAAuD;YAC/H,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,aAAa,CAAC,CAAM,EAAE,EAAW,EAAE,GAAa;QAC9C,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QACnE,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QACjE,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QACpE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,SAAS,CAAC,CAAC,CAAC;IAC3C,CAAC;CACF;AAtBD,mCAsBC","sourcesContent":["import UsersManager from '../classes/Users';\nimport { success, error } from '../utils/functions';\nimport { sign } from 'jsonwebtoken';\nimport type { CookieOptions, Request, Response } from 'express';\nimport type { App } from '../app';\n\nconst COOKIE_CONFIG: CookieOptions = {\n  maxAge: 3600000 * 3,\n  httpOnly: true,\n  domain: process.env.FRONT_DOMAIN,\n  secure: process.env.NODE_ENV == 'production' ? true : false,\n  sameSite: 'lax',\n};\n\nexport default class Authentification {\n  Users: UsersManager;\n  constructor(app: App) {\n    this.Users = new UsersManager(app);\n  }\n  authentification(_: App, req: Request, res: Response): void {\n    this.Users.auth(req.body.username, req.body.password)\n      .then(result => {\n        const token = sign({ expiresIn: '6h', userId: result.id }, process.env.JWT_SECRET || '');\n        res.cookie('user_token', `${token}`, COOKIE_CONFIG); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n        res.cookie('user_id', `${result.id}`, COOKIE_CONFIG); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n        res.cookie('user_auth', `true`, { ...COOKIE_CONFIG, httpOnly: false }); //process.env.NODE_ENV == 'production' ? 'None' : 'lax'\n        res.status(200).json(success({ auth: true }));\n      })\n      .catch(e => res.json(error(e)));\n  }\n  disconnection(_: App, __: Request, res: Response): void {\n    res.clearCookie('user_auth', { domain: process.env.FRONT_DOMAIN });\n    res.clearCookie('user_id', { domain: process.env.FRONT_DOMAIN });\n    res.clearCookie('user_token', { domain: process.env.FRONT_DOMAIN });\n    res.status(200).json(success('success'));\n  }\n}\n"]}