{"version":3,"file":"categories.controller.js","sourceRoot":"","sources":["../../controllers/categories.controller.ts"],"names":[],"mappings":";;;AAAA,+EAAsD;AACtD,kDAAoD;AAIpD,MAAqB,oBAAoB;IAGvC,YAAY,GAAQ;QAFpB;;;;;WAAS;QACT;;;;;WAAwB;QAEtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,oBAAiB,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,CAAC,CAAU,EAAE,GAAa;QAC9B,IAAI,CAAC,IAAI;aACN,MAAM,EAAE;aACR,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,MAAM,CAAC,CAAC,CAAC;aAC5D,KAAK,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,GAAG,CAAC,GAAY,EAAE,GAAa;QAC7B,IAAI,CAAC,IAAI;aACN,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;aACvG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,CAAC,CAAC,CAAC,CAAC;aAC3C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,CAAC,GAAY,EAAE,GAAa;QAChC,IAAI,CAAC,IAAI;aACN,MAAM,CAAC;YACN,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,EAAG;YAClB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS;SAC9B,CAAC;aACD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,CAAC,CAAC,CAAC,CAAC;aAC3C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,CAAC,GAAY,EAAE,GAAa;QAChC,IAAI,CAAC,IAAI;aACN,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAG,CAAC;aACtB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,CAAC,CAAC,CAAC,CAAC;aAC3C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;CACF;AAxCD,uCAwCC","sourcesContent":["import CategoriesManager from '../classes/Categories';\nimport { error, success } from '../utils/functions';\nimport type { Request, Response } from 'express';\nimport type { App } from '../app';\n\nexport default class CategoriesController {\n  app: App;\n  db_c: CategoriesManager;\n  constructor(app: App) {\n    this.app = app;\n    this.db_c = new CategoriesManager(app);\n  }\n  getAll(_: Request, res: Response) {\n    this.db_c\n      .getAll()\n      .then((result: any) => res.status(200).json(success(result)))\n      .catch((err: Error) => res.status(500).json(error(err.message)));\n  }\n\n  add(req: Request, res: Response) {\n    this.db_c\n      .add({ name: req.body.name, icon: req.body.icon, order: req.body.order, parent_id: req.body.parent_id })\n      .then(r => res.status(201).json(success(r)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n\n  update(req: Request, res: Response) {\n    this.db_c\n      .update({\n        id: req.params.id!,\n        name: req.body.name,\n        icon: req.body.icon,\n        order: req.body.order,\n        parent_id: req.body.parent_id,\n      })\n      .then(r => res.status(200).json(success(r)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n\n  delete(req: Request, res: Response) {\n    this.db_c\n      .delete(req.params.id!)\n      .then(r => res.status(200).json(success(r)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n}\n"]}