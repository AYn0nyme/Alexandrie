{"version":3,"file":"documents.controller.js","sourceRoot":"","sources":["../../controllers/documents.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import DocumentsManager from '../classes/DocumentsManager';\nimport { error, success } from '../utils/functions';\nimport type { Response, Request } from 'express';\nimport type { App } from '../app';\nimport type { Document } from '../types';\n\nexport default class DocumentsController {\n  app: App;\n  db_a: DocumentsManager;\n  constructor(app: App) {\n    this.app = app;\n    this.db_a = new DocumentsManager(app);\n  }\n\n  getAllDocuments(req: Request, res: Response) {\n    if (req.query.category) {\n      this.db_a\n        .getAllByCategory(req.query.category.toString())\n        .then((value: any) => res.status(200).json(success(value)))\n        .catch((err: Error) => res.status(500).json(error(err.message)));\n    } else {\n      this.db_a\n        .getAll()\n        .then((result: Partial<Document>[]) => {\n          // Select fields\n          if (req.query.fields) {\n            const Qfields: string[] = req.query.fields.toString().split(',');\n\n            if (Qfields.length) {\n              result = result.map((item: Partial<Document>) => {\n                const filtered = {} as any;\n                Qfields.forEach(field => {\n                  if (item[field as keyof Document]) filtered[field as keyof Document] = item[field as keyof Document];\n                });\n                return filtered;\n              });\n            }\n          }\n          res.status(200).json(success(result));\n        })\n        .catch(e => res.status(500).json(error(e)));\n    }\n  }\n  getDocument(req: Request, res: Response) {\n    this.db_a\n      .get(req.params.id as string)\n      .then(r => res.status(200).json(success(r)))\n      .catch(e => res.status(500).json(error(e)));\n  }\n  add(req: Request, res: Response): void {\n    this.db_a\n      .add({\n        name: req.body.name,\n        description: req.body.description,\n        tags: req.body.tags,\n        category: req.body.category,\n        accessibility: req.body.accessibility,\n        content_markdown: req.body.content_markdown,\n        content_html: req.body.content_html,\n        author_id: req.cookies.user_id,\n      })\n      .then(r => res.status(201).json(success(r)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  updateDocument(req: Request, res: Response) {\n    this.db_a\n      .put(req.params.id as string, {\n        name: req.body.name,\n        description: req.body.description,\n        tags: req.body.tags,\n        category: req.body.category,\n        accessibility: req.body.accessibility,\n        content_markdown: req.body.content_markdown,\n        content_html: req.body.content_html,\n        author_id: req.cookies.user_id,\n      })\n      .then(r => res.status(201).json(success(r)))\n      .catch(err => res.status(500).json(error(err.message)));\n  }\n  deleteDocument(req: Request, res: Response) {\n    this.db_a\n      .delete(req.params.id as string)\n      .then(r => res.status(201).json(success(r)))\n      .catch((err: Error) => res.status(500).json(error(err.message)));\n  }\n}\n"]}