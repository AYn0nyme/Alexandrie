{"version":3,"file":"cdn.controller.js","sourceRoot":"","sources":["../../controllers/cdn.controller.ts"],"names":[],"mappings":";;;;AAAA,+BAA4B;AAC5B,2BAAgC;AAChC,0DAA0B;AAC1B,kDAAoD;AAIpD,SAAgB,kBAAkB,CAAC,CAAM,EAAE,GAAY,EAAE,GAAa;IACpE,IAAI,OAAO,GAAG,CAAC,KAAK,IAAI,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;QAChF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,mBAAmB,CAAC,CAAC,CAAC;QACjD,OAAO;KACR;IAED,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAE/C,IAAI,CAAC,QAAQ,EAAE;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,mBAAmB,CAAC,CAAC,CAAC;QACjD,OAAO;KACR;IAED,MAAM,IAAI,GAAG,IAAA,WAAI,EAAC,SAAS,EAAE,wBAAwB,QAAQ,EAAE,CAAC,CAAC;IAEjE,IAAI,IAAA,eAAU,EAAC,IAAI,CAAC,EAAE;QACpB,IAAA,eAAK,EAAC,IAAI,CAAC;aACR,MAAM,CAAC,IAAA,WAAI,EAAC,SAAS,EAAE,sBAAsB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAC5E,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,mBAAO,EAAC,SAAS,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjF,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,uCAAuC,CAAC,CAAC,CAAC,CAAC;KACrF;;QAAM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAK,EAAC,iBAAiB,CAAC,CAAC,CAAC;AACxD,CAAC;AArBD,gDAqBC","sourcesContent":["import { join } from 'path';\nimport { existsSync } from 'fs';\nimport sharp from 'sharp';\nimport { error, success } from '../utils/functions';\nimport type { Request, Response } from 'express';\nimport type { App } from '../app';\n\nexport function convertImagetoWebp(_: App, req: Request, res: Response) {\n  if (typeof req.files != 'object' || !('file' in req.files) || !req.files.file[0]) {\n    res.status(400).json(error('No file provided.'));\n    return;\n  }\n\n  const filename = req.files['file'][0].filename;\n\n  if (!filename) {\n    res.status(400).json(error('No file provided.'));\n    return;\n  }\n\n  const path = join(__dirname, `../../uploads/images/${filename}`);\n\n  if (existsSync(path)) {\n    sharp(path)\n      .toFile(join(__dirname, `../../uploads/webp/${filename.split('.')[0]}.webp`))\n      .then(() => res.status(200).json(success(`/webp/${filename.split('.')[0]}.webp`)))\n      .catch(_ => res.status(500).json(error('Error while converting image to webp.')));\n  } else res.status(404).json(error('File not found.'));\n}\n"]}