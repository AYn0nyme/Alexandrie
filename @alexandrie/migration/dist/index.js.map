{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nNew categories:\n153009357737431040,Général (Maths)\n153009357787762689,Algèbre\n153009357787762690,Analyse\n153009357787762691,Géométrie\n153009357787762692,Probabilités et statistiques\n153009357791956997,Raisonnements\n153009590005403648,Algorithmie\n153009590005403649,Général (Physique)\n153009590005403650,Énergie\n153009590005403651,Optique\n153009590005403652,Matière\n153009590005403653,Ondes\n153009590005403654,Mécanique\n153009590005403655,Acides & Bases\n153009590005403656,Oxydoréduction\n153009590005403657,Général (Ingénierie)\n153009590005403658,Informations\n153009590005403659,Réseaux\n153009590005403660,Modélisation de systèmes\n\n\nOld categories: (name, id)\nGénéral,general\nNombres,nombres\nAlgèbres,algebres\nAnalyse,analyse\nGéométrie,geometrie\nProbabilités et statistiques,probalitites-et-statistiques\nAlgorithmie,algorithmie\nInformation,information\nGénéral,general\nMatière,matiere\nÉnergie,energie\nOndes,ondes\nRéseaux,reseaux\nGénéral,general\nModélisation de systèmes,modelisation\nMécanique,mecanique\n\n\n*/\nfunction getNewCategoryID(old_id: string): string {\n  switch (old_id) {\n    case 'general':\n      return '153009357737431040'; // Général (Maths)\n    case 'nombres':\n      return '153009357787762689'; // You can specify a default value for unknown old IDs\n    case 'algebres':\n      return '153009357787762689'; // Algèbre\n    case 'analyse':\n      return '153009357787762690'; // Analyse\n    case 'geometrie':\n      return '153009357787762691'; // Géométrie\n    case 'probalitites-et-statistiques':\n      return '153009357787762692'; // Probabilités et statistiques\n    case 'algorithmie':\n      return '153009590005403648'; // Algorithmie\n    case 'information':\n      return '153009590005403658'; // Informations\n    case 'matiere':\n      return '153009590005403652'; // Matière\n    case 'energie':\n      return '153009590005403650'; // Énergie\n    case 'ondes':\n      return '153009590005403653'; // Ondes\n    case 'reseaux':\n      return '153009590005403659'; // Réseaux\n    case 'modelisation':\n      return '153009590005403660'; // Modélisation de systèmes\n    case 'mecanique':\n      return '153009590005403654'; // Mécanique\n    default:\n      return '153009590005403662'; // You can specify a default value for unknown old IDs\n  }\n}\nimport { type Pool, createPool } from 'mysql2';\nimport type { Article, ArticleDB, Document, DocumentDB } from './types';\n\nfunction getConnection(host?: string, user?: string, password?: string, db_name?: string) {\n  return createPool({\n    host: host,\n    user: user,\n    password: password,\n    database: db_name,\n  });\n}\n\nconst old_db: Pool = getConnection('localhost', 'root', 'root', 'docs');\nconst new_db = getConnection('localhost', 'root', 'root', 'alexandrie');\n\nfunction getAllOldArticles() {\n  return new Promise<Article[]>(resolve => {\n    old_db.query<ArticleDB[]>('SELECT * FROM articles', (err, result) => {\n      if (err) console.log(err);\n      resolve(result);\n    });\n  });\n}\nfunction formatArticleToDocument(article: Article): Document {\n  return {\n    id: article.id,\n    name: article.name,\n    description: article.description,\n    tags: '',\n    category: getNewCategoryID(article.sub_category),\n    accessibility: 1,\n    content_markdown: article.content_markdown,\n    content_html: article.content_html,\n    author_id: '152981937240150016',\n    created_timestamp: article.created_timestamp,\n    updated_timestamp: article.updated_timestamp,\n  };\n}\n\nconsole.log('Starting migration...');\n\nconst articles = await getAllOldArticles();\nconsole.log('Got all articles.');\nconst documents = articles.map(article => formatArticleToDocument(article));\nconsole.log('Formatted all articles.');\nconsole.log('Starting to insert documents...');\nlet i = 1;\nfor (const document of documents) {\n  console.log(`Inserting document ${document.name}... (${i}/${documents.length})`);\n  i++;\n  await new Promise(resolve => {\n    new_db.query<DocumentDB[]>(\n      'INSERT INTO documents (`id`, `name`, `description`, `tags`, `category`, `accessibility`, `content_markdown`, `content_html`, `author_id`, `created_timestamp`, `updated_timestamp`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',\n      [\n        document.id,\n        document.name,\n        document.description,\n        document.tags,\n        document.category,\n        document.accessibility,\n        document.content_markdown,\n        document.content_html,\n        document.author_id,\n        document.created_timestamp,\n        document.updated_timestamp,\n      ],\n      (err, result) => {\n        if (err) console.log(err);\n        console.log(`Inserted document ${document.name}.`);\n        resolve(result);\n      },\n    );\n  });\n}\n\nconsole.log('Migration finished.');\nnew_db.end();\nold_db.end();\n"]}